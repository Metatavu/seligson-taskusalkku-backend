# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class PortfolioSecurity(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PortfolioSecurity - a model defined in OpenAPI

        id: The id of this PortfolioSecurity.
        amount: The amount of this PortfolioSecurity.
        purchaseValue: The purchaseValue of this PortfolioSecurity.
        totalValue: The totalValue of this PortfolioSecurity.
    """
    id: str
    amount: str
    purchaseValue: str
    totalValue: str

    @classmethod
    @validator("amount")
    def amount_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value

    @classmethod
    @validator("purchase_value")
    def purchase_value_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value

    @classmethod
    @validator("total_value")
    def total_value_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value


PortfolioSecurity.update_forward_refs()
