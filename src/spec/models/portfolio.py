# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class Portfolio(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Portfolio - a model defined in OpenAPI

        id: The id of this Portfolio [Optional].
        totalAmount: The totalAmount of this Portfolio [Optional].
        marketValueTotal: The marketValueTotal of this Portfolio [Optional].
        purchaseTotal: The purchaseTotal of this Portfolio [Optional].
    """
    id: Optional[str] = None
    totalAmount: Optional[str] = None
    marketValueTotal: Optional[str] = None
    purchaseTotal: Optional[str] = None

    @classmethod
    @validator("total_amount")
    def total_amount_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value

    @classmethod
    @validator("market_value_total")
    def market_value_total_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value

    @classmethod
    @validator("purchase_total")
    def purchase_total_pattern(cls, value):
        assert value is not None and re.match(r"^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$", value)
        return value


Portfolio.update_forward_refs()
